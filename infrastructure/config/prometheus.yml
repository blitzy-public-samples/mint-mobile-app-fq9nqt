# Human Tasks:
# 1. Verify AWS IAM roles for CloudWatch Logs integration
# 2. Configure alert notification channels in AlertManager
# 3. Set up retention policies for CloudWatch Logs
# 4. Review and adjust scraping intervals based on resource usage
# 5. Configure network security groups to allow metrics collection

# Requirements addressed:
# - 7.5 Development and Deployment Tools: Implements Prometheus 2.40+ configuration with specified scraping intervals
# - 9.3.2 Security Monitoring: Configures real-time metrics collection with CloudWatch integration
# - 10.2.1 AWS Service Configuration: Sets up monitoring for AWS infrastructure components

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  scrape_timeout: 10s
  external_labels:
    environment: production
    cluster: mint-replica-lite

# Alert rules configuration
rule_files:
  - /etc/prometheus/rules/recording_rules.yml
  - /etc/prometheus/rules/alerting_rules.yml

# AlertManager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Kubernetes API server monitoring
  - job_name: kubernetes-apiservers
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
        action: keep
        regex: default;kubernetes

  # Kubernetes nodes monitoring
  - job_name: kubernetes-nodes
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes pods monitoring
  - job_name: kubernetes-pods
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Mint Replica API monitoring
  - job_name: mint-replica-api
    metrics_path: /metrics
    static_configs:
      - targets:
          - api:8080
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - source_labels: [__param_target]
        target_label: instance
      - target_label: service
        replacement: mint-replica-api

  # Node exporter monitoring
  - job_name: node-exporter
    static_configs:
      - targets:
          - node-exporter:9100
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: service
        replacement: node-exporter

# Storage configuration
storage:
  tsdb:
    retention_time: 15d
    retention_size: 50GB
    # Enable WAL compression for better storage efficiency
    wal_compression: true
    # Out of order time series handling
    out_of_order_time_window: 5m

# Remote write configuration for CloudWatch Logs integration
remote_write:
  - url: "https://aps-workspaces.${AWS_REGION}.amazonaws.com/workspaces/${WORKSPACE_ID}/api/v1/remote_write"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
    sigv4:
      region: ${AWS_REGION}
      role_arn: ${IAM_ROLE_ARN}

# Security settings
tls_server_config:
  cert_file: /etc/prometheus/certs/prometheus.crt
  key_file: /etc/prometheus/certs/prometheus.key

# Web configuration
web:
  external_url: https://prometheus.mintreplica.com
  route_prefix: /
  cors_origin: '^https?://.*\.mintreplica\.com'