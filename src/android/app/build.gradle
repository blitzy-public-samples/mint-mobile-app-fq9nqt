// Human Tasks:
// 1. Create a keystore file for signing release builds
// 2. Configure environment-specific API keys in local.properties
// 3. Set up Firebase project and add google-services.json
// 4. Configure ProGuard rules for release builds

// Plugin versions
plugins {
    id 'com.android.application' version '7.4.2'  // Android application plugin
    id 'org.jetbrains.kotlin.android' version '1.8.0'  // Kotlin Android support
    id 'org.jetbrains.kotlin.kapt' version '1.8.0'  // Kotlin annotation processing
    id 'com.google.dagger.hilt.android' version '2.44'  // Hilt dependency injection
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin' version '2.0.1'  // Secure API key management
}

android {
    // Requirement: Modern Android Architecture
    namespace 'com.mintreplica.lite'
    compileSdk 33

    defaultConfig {
        applicationId "com.mintreplica.lite"
        minSdk 24  // Supports 99.4% of Android devices
        targetSdk 33
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        // Enable Room schema export
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                    "room.schemaLocation": "$projectDir/schemas",
                    "room.incremental": "true",
                    "room.expandProjection": "true"
                ]
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    // Product flavors for different environments
    flavorDimensions "environment"
    productFlavors {
        development {
            dimension "environment"
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "Mint Replica Lite (Dev)"
        }
        production {
            dimension "environment"
            resValue "string", "app_name", "Mint Replica Lite"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += [
            "-opt-in=androidx.compose.material3.ExperimentalMaterial3Api",
            "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
        ]
    }

    buildFeatures {
        compose true
        viewBinding true
        dataBinding true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    def composeBom = platform('androidx.compose:compose-bom:2023.01.00')
    implementation composeBom
    androidTestImplementation composeBom

    // AndroidX Core and Lifecycle - Latest stable versions
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.1'

    // Jetpack Compose
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Requirement: Security Implementation
    implementation 'androidx.biometric:biometric:1.2.0-alpha05'  // Biometric authentication
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'  // Secure storage

    // Hilt Dependency Injection
    implementation 'com.google.dagger:hilt-android:2.44'
    kapt 'com.google.dagger:hilt-android-compiler:2.44'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Room Database
    implementation 'androidx.room:room-runtime:2.5.0'
    implementation 'androidx.room:room-ktx:2.5.0'
    kapt 'androidx.room:room-compiler:2.5.0'

    // Retrofit & OkHttp for networking
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'

    // Kotlin Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.6.4'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:31.5.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    // Financial Charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // Testing Dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
}

// Enable Kotlin Annotation Processing Tool (kapt)
kapt {
    correctErrorTypes true
    arguments {
        arg("dagger.hilt.disableModulesHaveInstallInCheck", "true")
    }
}

// Apply Google services plugin after all dependencies
apply plugin: 'com.google.gms.google-services'