# Human Tasks:
# 1. Verify service port matches ingress configuration
# 2. Confirm service type aligns with network architecture
# 3. Review network policies for service communication
# 4. Validate service DNS resolution in cluster
# 5. Check service monitoring and metrics collection

# Requirement: Load Balancing
# Location: Technical Specification/5.2.2 API Gateway/Load balancing
# Implementation: Service configuration for load balancing backend pods
apiVersion: v1
kind: Service
metadata:
  name: mint-replica-backend
  namespace: default
  labels:
    app: mint-replica
    component: backend
    environment: production
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "80"
    prometheus.io/path: "/metrics"

# Requirement: High Availability
# Location: Technical Specification/5.5 Scalability Architecture
# Implementation: Service configuration for distributing traffic across replicas
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 3000
      protocol: TCP
  
  # Requirement: Network Architecture
  # Location: Technical Specification/10.2.2 Network Architecture
  # Implementation: Service selector for pod discovery and load balancing
  selector:
    app: mint-replica
    component: backend
  
  # Disable session affinity for better load distribution
  sessionAffinity: None
  
  # Configure IP settings
  ipFamilyPolicy: SingleStack
  ipFamilies:
    - IPv4
  
  # Enable internal traffic policy for optimized routing
  internalTrafficPolicy: Cluster
  
  # Configure publish not ready addresses for faster failover
  publishNotReadyAddresses: false